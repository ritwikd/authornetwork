"http://ieeexplore.ieee.org/search/searchresult.jsp?bulkSetSize=2000&queryText%3D.LB.Embedded+Software+.LB.EMSOFT.RB.%2C+2013+International+Conference+on.RB.",2015/07/23 14:10:24
"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Year","Volume","Issue","Start Page","End Page","Abstract","ISSN","ISBN","EISBN","DOI",PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","MeSH Terms",Article Citation Count,Patent Citation Count,"Reference Count","Copyright Year","Online Date",Issue Date,"Meeting Date","Publisher",Document Identifier
"Message from the program co-chairs","Ernst, Rolf; Sokolsky, Oleg","Technical University of Braunschweig, Germany","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","1","Welcome to EMSOFT 2013, the 13th International Conference on Embedded Software, held in Montreal, Quebec, Canada, on September 29 – October 4, 2013.","","","","10.1109/EMSOFT.2013.6658575","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658575","","","","","","0","","","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Time-aware relational abstractions for hybrid systems","Mover, S.; Cimatti, A.; Tiwari, A.; Tonetta, S.","FBK, Trento, Italy","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Hybrid Systems model both discrete switches and continuous dynamics and are suitable to represent embedded systems where discrete controllers interact with a physical plant. Relational abstraction is a new approach for verifying hybrid systems. In relational abstraction, the continuous dynamics in each location of the hybrid system is abstracted by a binary relation that relates the current value of the continuous variables with all future values of the variables that are reachable after a time elapse (continuous) transition. The abstract system is an infinite-state system, which can be verified using k-induction or abstract interpretation. Existing techniques for computing relational abstractions are time-agnostic: they do not construct any relationship between the state variables and the time elapsed during the continuous evolution. Time-agnostic abstractions cannot verify timing properties. We present a technique to compute a time-aware relational abstraction for verifying (timing-related) safety properties of cyber-physical systems. We show the effectiveness of the new abstraction on several case studies on which the previous techniques fail.","","","","10.1109/EMSOFT.2013.6658592","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658592","Abstraction;Formal Methods;Hybrid Systems;Verification","Abstracts;Automata;Eigenvalues and eigenfunctions;Encoding;Equations;Mathematical model;Safety","continuous systems;control engineering computing;discrete systems;formal verification;reachability analysis","abstract interpretation;abstract system;binary relation;continuous dynamics;continuous transition;continuous variables;cyber-physical systems;discrete controllers;discrete switch;embedded systems;hybrid system verification;hybrid systems;infinite-state system;k-induction;physical plant;time elapse transition;time-agnostic abstraction;time-aware relational abstraction;timing properties;timing-related safety property verification","","0","","35","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Organization","","","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","1","Provides a listing of current committee members and society officers.","","","","10.1109/EMSOFT.2013.6658576","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658576","","","","","","0","","","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"[Copyright notice]","","","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","1","","","","","10.1109/EMSOFT.2013.6658574","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658574","","","","","","0","","","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Bit-precise formal verification of discrete-time MATLAB/Simulink Models using SMT Solving","Herber, P.; Reicherdt, R.; Bittner, P.","Tech. Univ. Berlin, Berlin, Germany","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Matlab/Simulink is widely used for model-based development of embedded systems. In particular, safety-critical applications are increasingly designed in Matlab/Simulink. At the same time, formal verification techniques for Matlab/Simulink are still rare and existing ones do not scale well. In this paper, we present an automatic transformation from discrete-time Matlab/Simulink to the input language of UCLID. UCLID is a toolkit for system verification based on SMT solving. Our approach enables us to use a combination of bounded model checking and inductive invariant checking for the automatic verification of Matlab/Simulink models. To demonstrate the practical applicability of our approach, we have successfully verified the absence of one of the most common errors, i. e. variable over- or underflow, for an industrial design from the automotive domain.","","","","10.1109/EMSOFT.2013.6658586","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658586","Formal Verification;Matlab/Simulink;Model Analysis","Computational modeling;MATLAB;Mathematical model;Model checking;Semantics;Vectors","automotive engineering;formal verification;safety-critical software","SMT solving;UCLID;automatic verification;automotive domain;bit-precise formal verification;bounded model checking;discrete-time MATLAB-Simulink Model;embedded systems;formal verification technique;inductive invariant checking;industrial design;input language;model-based development;safety-critical application;system verification;variable overflow;variable underflow","","0","","20","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Limited preemptive scheduling of non-independent task sets","Baldovin, A.; Mezzetti, E.; Vardanega, T.","Dept. of Math., Univ. of Padua, Padua, Italy","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Preemption is a key factor against architectural coupling in concurrent systems. The whole verification process of real-time systems postulates composability in multiple dimensions, including time. As coupling wrecks composability, the design of real-time systems really needs preemption. However preemption effects complicate feasibility analysis or make it more pessimistic. Hence methods that limit preemptions without affecting feasibility are attractive. State-of-the-art approaches to limited preemption, however, do not treat resource sharing with the importance that it deserves. The placement of non-preemptive regions - and their interactions with shared resources - should not become a design problem, but rather stay as an implementation level feature that does not backtrack to the design space. In this paper we present a refinement to the state-of-the-art limited preemption model that addresses the interaction with resource sharing, and discuss a kernel implementation that uses run-time knowledge to warrant safe and efficient overlaps between critical sections and non-preemptive regions. Experimental results prove the effectiveness of the proposed solution.","","","","10.1109/EMSOFT.2013.6658596","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658596","Limited preemption;Scheduling;Shared resources","Abstracts","concurrency control;real-time systems;scheduling","composability;concurrent systems;kernel implementation;limited preemptive scheduling;nonindependent task sets;nonpreemptive regions;real-time systems;run-time knowledge;whole verification process","","0","","30","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"A generalized software framework for accurate and efficient management of performance goals","Hoffmann, H.; Maggio, M.; Santambrogio, M.D.; Leva, A.; Agarwal, A.","Univ. of Chicago, Chicago, IL, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","A number of techniques have been proposed to provide runtime performance guarantees while minimizing power consumption. One drawback of existing approaches is that they work only on a fixed set of components (or actuators) that must be specified at design time. If new components become available, these management systems must be redesigned and reimplemented. In this paper, we propose PTRADE, a novel performance management framework that is general with respect to the components it manages. PTRADE can be deployed to work on a new system with different components without redesign and reimplementation. PTRADE's generality is demonstrated through the management of performance goals for a variety of benchmarks on two different Linux/x86 systems and a simulated 128-core system, each with different components governing power and performance tradeoffs. Our experimental results show that PTRADE provides generality while meeting performance goals with low error and close to optimal power consumption.","","","","10.1109/EMSOFT.2013.6658597","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658597","Adaptive Systems;Power-aware Computing;Self-aware Computing","Actuators;Benchmark testing;Heart beat;Power demand;Runtime","Linux;power aware computing;software performance evaluation","Linux-x86 systems;PTRADE;generalized software framework;performance goal management;performance management framework;power consumption minimization;run-time performance;simulated 128-core system","","2","","47","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"DIME: Time-aware dynamic binary instrumentation using rate-based resource allocation","Arafa, P.; Kashif, H.; Fischmeister, S.","Dept. of Electr. & Comput. Eng., Univ. of Waterloo, Waterloo, ON, Canada","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Program analysis tools are essential for understanding programs, analyzing performance, and optimizing code. Some of these tools use code instrumentation to extract information at runtime. The instrumentation process can alter program behavior such as timing behavior and memory consumption. Time-sensitive programs, however, must meet specific timing constraints and thus require that the instrumentation process, for instance, bounds the timing overhead. Time-aware instrumentation techniques try to honor the timing constraints of such programs. All previous techniques, however, support only static source-code instrumentation methods. Hence, they become impractical beyond microcontroller code for instrumenting large programs along with all their library dependencies. In this work, we propose DIME, a time-aware dynamic binary instrumentation technique that adds an adjustable bound on the timing overhead to the program under analysis. We implement DIME using the dynamic instrumentation framework, Pin. Quantitative evaluation of the three implementation alternatives shows an average reduction of the instrumentation overhead by 12, 7, and 3 folds compared to native Pin. Instrumenting the VLC media player and a laser beam stabilization experiment demonstrate the practicality and scalability of DIME.","","","","10.1109/EMSOFT.2013.6658603","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658603","Instrumentation;Profiling;Tracing","Data mining;Instruments;Resource management;Runtime;Switches;Timing;Tin","program diagnostics;resource allocation;reverse engineering","DIME technique;Pin dynamic instrumentation framework;VLC media player;code optimization;information extraction;laser beam stabilization experiment;memory consumption;microcontroller code;program analysis tools;program behavior;program understanding;rate-based resource allocation;static source-code instrumentation methods;time-aware dynamic binary instrumentation;time-sensitive programs;timing behavior;timing constraints;timing overhead","","0","","39","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Synthesis of fixed-point programs","Darulova, E.; Kuncak, V.; Majumdar, R.; Saha, I.","EPFL, Lausanne, Switzerland","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Several problems in the implementations of control systems, signal-processing systems, and scientific computing systems reduce to compiling a polynomial expression over the reals into an imperative program using fixed-point arithmetic. Fixed-point arithmetic only approximates real values, and its operators do not have the fundamental properties of real arithmetic, such as associativity. Consequently, a naive compilation process can yield a program that significantly deviates from the real polynomial, whereas a different order of evaluation can result in a program that is close to the real value on all inputs in its domain. We present a compilation scheme for real-valued arithmetic expressions to fixed-point arithmetic programs. Given a real-valued polynomial expression t, we find an expression t' that is equivalent to t over the reals, but whose implementation as a series of fixed-point operations minimizes the error between the fixed-point value and the value of t over the space of all inputs. We show that the corresponding decision problem, checking whether there is an implementation t' of t whose error is less than a given constant, is NP-hard. We then propose a solution technique based on genetic programming. Our technique evaluates the fitness of each candidate program using a static analysis based on affine arithmetic. We show that our tool can significantly reduce the error in the fixed-point implementation on a set of linear control system benchmarks. For example, our tool found implementations whose errors are only one half of the errors in the original fixed-point expressions.","","","","10.1109/EMSOFT.2013.6658600","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658600","","Benchmark testing;Control systems;Equations;Genetic programming;Input variables;Software;Upper bound","fixed point arithmetic;polynomials","NP-hard problem;affine arithmetic;compilation scheme;decision problem;fixed-point arithmetic programs;fixed-point expression;fixed-point program synthesis;genetic programming;linear control system;real-valued arithmetic expressions;real-valued polynomial expression;static analysis","","2","","25","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Tutorial","Zilic, Z.","Dept. ECE, McGill Univ., Montreal, QC, Canada","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","8","These tutorials discuss the following: methodologies and tools for embedded multisensory systems based on ARM Cortex M processors; AADLv2: an architecture description language for the analysis and generation of embedded systems; cross-layer reliability modeling and optimization for embedded systems under process variations; and mixed-criticality systems.","","","","10.1109/EMSOFT.2013.6658578","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658578","","Computer architecture;Embedded systems;Hardware;Program processors;Reliability;Unified modeling language","embedded systems;microprocessor chips;performance evaluation;specification languages","AADLv2 language;ARM Cortex M processors;architecture description language;cross-layer reliability modeling;embedded multisensory systems;embedded systems analysis;embedded systems generation;embedded systems optimization;mixed-criticality systems;process variations","","0","","11","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Pre-orders for reasoning about stability properties with respect to input of hybrid systems","Prabhakar, P.; Jun Liu; Murray, R.M.","IMDEA Software Inst., Madrid, Spain","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Pre-orders on systems are the basis for abstraction based verification of systems. In this paper, we investigate pre-orders for reasoning about stability with respect to inputs of hybrid systems. First, we present a superposition type theorem which gives a characterization of the classical incremental input-to-state stability of continuous systems in terms of the traditional ε-δ definition of stability. We use this as the basis for defining a notion of incremental input-to-state stability of hybrid systems. Next, we present a pre-order on hybrid systems which preserves incremental input-to-state stability, by extending the classical definitions of bisimulation relations on systems with input, with uniform continuity constraints. We show that the uniform continuity is a necessary requirement by exhibiting counter-examples to show that weaker notions of input bisimulation with just continuity requirements do not suffice to preserve stability. Finally, we demonstrate that the definitions are useful, by exhibiting concrete abstraction functions which satisfy the definitions of pre-orders.","","","","10.1109/EMSOFT.2013.6658602","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658602","(Bi)-Simulations;Abstraction;Stability;Verification","Abstracts","bisimulation equivalence;reasoning about programs;type theory","abstraction based verification;abstraction function;bisimulation relations;continuity requirements;continuous systems;hybrid system input;incremental input-to-state stability;input bisimulation;preorder definition;reasoning about stability properties;stability preservation;superposition type theorem;traditional ε-δ definition;uniform continuity constraints","","0","","24","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Energy-aware thread co-location in heterogeneous multicore processors","Nishtala, R.; Mosse, D.; Petrucci, V.","Univ. of Pittsburgh, Pittsburgh, PA, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","9","Given the wide variety of performance demands for various workloads, the trend in embedded systems is shifting from homogeneous to heterogeneous processors, which have been shown to yield performance and energy saving benefits. A typical heterogeneous processor has cores with different performance and power characteristics, that is, high performance and power hungry (“big”) cores, and low power and performance (“small”) cores. In order to satisfy the memory bandwidth and computation demands of various threads, it is important (albeit challenging) to map threads to cores. Such assignment should take into account that threads could potentially be harmful to each other in the usage of shared resources (e.g., cache, memory). We propose a scheme for dynamic energy-efficient assignment of threads to big/small cores, DIO-E (Distributed Intensity Online-Energy), which is an enhancement of the previously proposed DIO. In contrast to DIO, we take into account both CPU and memory demands of threads to characterize the performance of threads when co-running on the same core at run-time. Our results show that DIO-E improves the energy-delay-squared product (ED<sup>2</sup>) by 9% (average) over DIO, running on a performance-asymmetric multicore system. Both DIO and DIO-E show about 50% improvement in ED<sup>2</sup> over a state-of-the-art solution.","","","","10.1109/EMSOFT.2013.6658599","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658599","Energy efficiency;Heterogeneous multicore;Multicore systems;Shared resource contention;Thread co-location","Abstracts;Monitoring","multi-threading;multiprocessing systems;power aware computing","CPU;DIO-E;dynamic energy-efficient assignment;energy-aware thread colocation;energy-delay-squared product;heterogeneous multicore processors;memory demands;performance-asymmetric multicore system","","0","1","24","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Verification of annotated models from executions","Duggirala, P.S.; Mitra, S.; Viswanathan, M.","Dept. of Comput. Sci., Univ. of Illinois at Urbana, Champaign, IL, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Simulations can help enhance confidence in system designs but they provide almost no formal guarantees. In this paper, we present a simulation-based verification framework for embedded systems described by non-linear, switched systems. In our framework, users are required to annotate the dynamics in each control mode of switched system by something we call a discrepancy function that formally measures the nature of trajectory convergence/divergence of the system. Discrepancy functions generalize other measures of trajectory convergence and divergence like Contraction Metrics and Incremental Lyapunov functions. Exploiting such annotations, we present a sound and relatively complete verification procedure for robustly safe/unsafe systems. We have built a tool based on the framework that is integrated into the popular Simulink/Stateflow modeling environment. Experiments with our prototype tool shows that the approach (a) outperforms other verification tools on standard linear and non-linear benchmarks, (b) scales reasonably to larger dimensional systems and to longer time horizons, and (c) applies to models with diverging trajectories and unknown parameters.","","","","10.1109/EMSOFT.2013.6658604","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658604","","Computational modeling;Lyapunov methods;Mathematical model;Measurement;Safety;Switches;Trajectory","embedded systems;formal verification","Simulink-Stateflow modeling environment;annotated models verification;contraction metrics;discrepancy function;embedded systems;incremental Lyapunov functions;robustly safe systems;robustly unsafe systems;simulation-based verification framework;switched system control mode;trajectory convergence;trajectory divergence","","0","","25","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"An efficient code update solution for wireless sensor network reprogramming","Mazumder, B.; Hallstrom, J.O.","Sch. of Comput., Clemson Univ., Clemson, SC, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","We present an incremental code update strategy used to efficiently reprogram wireless sensor nodes. We adapt a linear space and quadratic time algorithm (Hirschberg's algorithm) for computing maximal common subsequences to build an edit map specifying an edit sequence, required to transform the code running in a sensor network to a new code image. We then present a heuristic-based optimization strategy for efficient edit script encoding to reduce th.e edit map size. Finally, we present experimental results to demonstrate the reduction in data size to reprogram a network using this mechanism. The approach achieves reductions of 99.987% for simple changes, and between 86.95% and 94.58% for more complex changes, compared to full image transmissions - leading to significantly lower energy costs for wireless sensor network reprogramming. We compare the results with reductions achieved by other incremental update strategies described in prior work.","","","","10.1109/EMSOFT.2013.6658582","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658582","Incremental code update;code distribution;longest common subsequence;reprogramming;wireless sensor networks","Abstracts;Decoding;Ear;Educational institutions;Lead;Wireless sensor networks","optimisation;wireless sensor networks","Hirschberg algorithm;heuristic based optimization strategy;image transmissions;incremental code;quadratic time algorithm;script encoding;wireless sensor network reprogramming;wireless sensor nodes","","1","","26","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Diversifying wear index for MLC NAND flash memory to extend the lifetime of SSDs","Yeong-Jae Woo; Jin-Soo Kim","Samsung Electron. Co., Hwaseong, South Korea","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","NAND flash-based solid state drives (SSDs) are replacing magnetic disks because of their fast random access performance, shock resistance, and low power consumption. However, the number of program and erase cycles that can be performed on NAND flash is limited. To overcome this limitation, SSDs require a sophisticated wear-leveling algorithm which distributes program/erase cycles evenly across all flash blocks. While most of existing wear-leveling algorithms are only based on the erase counts of flash blocks, our empirical study indicates that the erase count alone is not a good wear index which tells us how much a flash block is worn out. This paper proposes a new wear index for MLC NAND flash memory which takes into account more diverse properties of NAND flash memory. To show the effectiveness of the proposed wear index, we also develop a wear-leveling algorithm, named Equalizer. In our evaluation with three realistic workloads, Equalizer based on the proposed wear index improves the effective lifetime of SSDs by up to 145% compared to the existing wear-leveling technique based on the erase count.","","","","10.1109/EMSOFT.2013.6658584","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658584","NAND flash memory;lifetime;reliability;storage system;wear-leveling","Ash;Engines;Equalizers;Error correction codes;Indexes;Programming;Reliability","NAND circuits;flash memories;power aware computing","MLC NAND flash memory;NAND flash based solid state drives;SSD;diversifying wear index;flash blocks;power consumption;random access performance;shock resistance;wear leveling algorithm","","0","","16","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Keynote","","","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","3","Provides an abstract of the keynote presentation and a brief professional biography of the presenter. The complete presentation was not made available for publication as part of the conference proceedings.","","","","10.1109/EMSOFT.2013.6658577","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658577","","","","","","0","","","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Safety verification for linear systems","Duggirala, P.S.; Tiwari, A.","Univ. of Illinois at Urbana Champaign, Champaign, IL, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","An embedded software controller is safe if the composition of the controller and the plant does not reach any unsafe state starting from legal initial states (in an unbounded time horizon). Linear systems - specified using linear ordinary differential or difference equations - form an important class of models for such control systems. We present a new decidability result for safety verification of linear systems. Our decidability result assumes that the set of initial states and the set of unsafe states satisfy some conditions. When the set of initial and unsafe states do not satisfy these conditions, they can be overapproximated by sets that do satisfy the conditions. We thus get a counterexample guided abstraction refinement (CEGAR) procedure for the unconstrained safety verification of linear systems. Our new procedure performs abstraction-refinement on the initial and unsafe region, and not on the system itself. We present the new procedure and describe experimental results that demonstrate its effectiveness.","","","","10.1109/EMSOFT.2013.6658585","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658585","","Abstracts;Concrete;Eigenvalues and eigenfunctions;Equations;Linear systems;Safety;Trajectory","approximation theory;decidability;difference equations;embedded systems;formal verification;linear systems;mathematics computing;partial differential equations;safety-critical software","CEGAR;counterexample guided abstraction refinement procedure for;decidability result;difference equations;embedded software controller;linear ordinary differential equations;linear systems;unbounded time horizon;unconstrained safety verification","","0","","22","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"On the schedulability of real-time discrete-event systems","Matsikoudis, E.; Stergiou, C.; Lee, E.A.","Univ. of California, Berkeley, Berkeley, CA, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","15","We consider end-to-end latency specifications for hard real-time embedded systems. We introduce a discrete-event programming model generalizing such specifications, and address its schedulability problem for uniprocessor systems. This turns out to be rather idiosyncratic, involving complex, time-dependent release predicates and precedence constraints, quite unlike anything we have seen in the hard real-time computing literature. We prove the optimality of the earliest-deadline-first scheduling policy, and provide an algorithmic solution, reducing the schedulability problem to a reachability problem for timed automata.","","","","10.1109/EMSOFT.2013.6658590","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658590","","Actuators;Delays;Programming;Real-time systems;Semantics;Semiconductor device measurement","algorithm theory;automata theory;formal specification;programming theory;reachability analysis;real-time systems;scheduling","algorithmic solution;complex release predicates;discrete-event programming model;earliest-deadline-first scheduling policy;end-to-end latency specifications;hard real-time embedded systems;precedence constraints;reachability problem;real-time discrete-event systems;schedulability problem;time-dependent release predicates;timed automata;uniprocessor systems","","0","","12","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Simple analysis of partial worst-case execution paths on general control flow graphs","Kleinsorge, J.C.; Falk, H.; Marwedel, P.","Tech. Univ. Dortmund, Dortmund, Germany","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","One of the most important computations in static worst-case execution time analyses is the path analysis which computes the potentially most time-consuming execution path in a program. This is typically done either with an implicit path computation based on solving an integer linear program, or with explicit path computations directly on the program's control flow graph. The former approach is powerful and comparably simple to use but hard to extend and to combine with other program analyses due to its restriction to the linear equation model. The latter approaches are often restricted to well-structured graphs, suffer from inaccuracy or require nontrivial structural analyses or graph transformations upfront or during their computations. In this paper, we propose a generalized computational model and a comprehensive explicit path analysis that operates on arbitrary directed control flow graphs. We propose simple and yet effective techniques to deal with unstructured control flows and complex flow fact models. The analysis does not require a control flow graph to be mutable, is non-recursive, fast, and provides the means to compute all worst-case paths from arbitrary source nodes. It is well suited for solving local problems and the computation of partial solutions, which is highly relevant for problems related to scheduling and execution modes alike.","","","","10.1109/EMSOFT.2013.6658594","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658594","Path Analysis;Static Analysis;Worst-case Execution Time","Algorithm design and analysis;Analytical models;Computational modeling;Context;Data structures;Redundancy;Vegetation","data flow graphs;program verification;scheduling","arbitrary directed control flow graphs;arbitrary source nodes;complex flow fact model;comprehensive explicit path analysis;execution mode;explicit path computation;general program control flow graphs;generalized computational model;implicit path computation;integer linear program;local problems;partial-worst-case execution path analysis;scheduling mode;static worst-case execution time analysis;unstructured control flow model","","0","","19","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"WakeScope: Runtime WakeLock anomaly management scheme for Android platform","Kwanghwan Kim; Hojung Cha","Dept. of Comput. Sci., Yonsei Univ., Seoul, South Korea","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Android provides a WakeLock mechanism for application developers to ensure the proper execution of applications without having to enter the sleep state of a device. When using the WakeLock mechanism, application developers should bear the responsibility of adequately releasing the acquired lock. Otherwise, the energy will unnecessarily be wasted due to a locked application. This paper presents a scheme, called WakeScope, to handle WakeLock misuse. The scheme is designed to detect and notify of a misuse case of WakeLock handling, which may arise with an application and even with an Android runtime system, and thus provides a practical tool to prevent energy waste in mobile devices. Our experiments with real applications show that WakeScope accurately detects the misused case, with runtime overhead of approximately 1.2% in CPU usage.","","","","10.1109/EMSOFT.2013.6658605","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658605","Android;Energy;Mobile;Smartphones;WakeLock","Androids;Batteries;Humanoid robots;Kernel;Keyboards;Linux;Runtime","energy conservation;mobile computing;operating systems (computers);power aware computing","Android platform;Android runtime system;WakeLock mechanism;WakeLock misuse handling;WakeScope scheme;energy waste prevention;mobile devices;runtime WakeLock anomaly management scheme","","1","","26","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"[Front cover]","","","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","c1","c1","Presents the front cover or splash screen of the proceedings record.","","","","10.1109/EMSOFT.2013.6658573","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658573","","","","","","0","","","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Stability-aware analysis and design of embedded control systems","Aminifar, A.; Eles, P.; Zebo Peng; Cervin, A.","Dept. of Comput. & Inf. Sci., Linkoping Univ., Linkoping, Sweden","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Many embedded systems comprise several controllers sharing available resources. It is well known that such resource sharing leads to complex timing behavior that can jeopardize stability of control applications, if it is not properly taken into account in the design process, e.g., mapping and scheduling. As opposed to hard real-time systems where meeting the deadline is a critical requirement, control applications do not enforce hard deadlines. Therefore, the traditional real-time analysis approaches are not readily applicable to control applications. Rather, in the context of control applications, stability is often the main requirement to be guaranteed, and can be expressed as the amount of delay and jitter a control application can tolerate. The nominal delay and response-time jitter can be regarded as the two main factors which relate the real-time aspects of a system to control performance and stability. Therefore, it is important to analyze the impact of variations in scheduling parameters, i.e., period and priority, on the nominal delay and response-time jitter and, ultimately, on stability. Based on such an analysis, we address, in this paper, priority assignment and sensitivity analysis problems for control applications considering stability as the main requirement.","","","","10.1109/EMSOFT.2013.6658601","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658601","","Delays;Equations;Jitter;Real-time systems;Sensitivity analysis;Stability analysis;Time factors","control system analysis;control system synthesis;delays;embedded systems;jitter;scheduling;sensitivity analysis;stability","control application stability;control performance;design process;embedded control systems;hard deadline;hard real-time system;mapping;nominal delay;priority assignment;resource sharing;response-time jitter;scheduling parameter;sensitivity analysis problem;stability guarantee;stability requirement;stability-aware analysis;stability-aware design;timing behavior","","1","","25","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Determinate composition of FMUs for co-simulation","Broman, D.; Brooks, C.; Greenberg, L.; Lee, E.A.; Masin, M.; Tripakis, S.; Wetter, M.","Univ. of California, Berkeley, Berkeley, CA, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","12","In this paper, we explain how to achieve deterministic execution of FMUs (Functional Mockup Units) under the FMI (Functional Mockup Interface) standard. In particular, we focus on co-simulation, where an FMU either contains its own internal simulation algorithm or serves as a gateway to a simulation tool. We give conditions on the design of FMUs and master algorithms (which orchestrate the execution of FMUs) to achieve deterministic co-simulation. We show that with the current version of the standard, these conditions demand capabilities from FMUs that are optional in the standard and rarely provided by an FMU in practice. When FMUs lacking these required capabilities are used to compose a model, many basic modeling capabilities become unachievable, including simple discrete-event simulation and variable-step-size numerical integration algorithms. We propose a small extension to the standard and a policy for designing FMUs that enables deterministic execution for a much broader class of models. The extension enables a master algorithm to query an FMU for the time of events that are expected in the future. We show that a model can be executed deterministically if all FMUs in the model are either memoryless or implement one of rollback or step-size prediction. We show further that such a model can contain at most one “legacy” FMU that is not memoryless and provides neither rollback nor step-size prediction.","","","","10.1109/EMSOFT.2013.6658580","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658580","","Algorithm design and analysis;Computational modeling;Mathematical model;Numerical models;Ports (Computers);Semantics;Standards","discrete event simulation;extrapolation;integration;standards","FMI standard;FMU design;FMU determinate composition;deterministic co-simulation;functional mockup interface standard;functional mockup units;legacy FMU;master algorithms;modeling capabilities;simple discrete-event simulation;variable-step-size numerical integration algorithms","","1","","27","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"StreaMorph: A case for synthesizing energy-efficient adaptive programs using high-level abstractions","Dai Bui; Lee, E.A.","Univ. of California, Berkeley, Berkeley, CA, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","This paper presents the concept of adaptive programs, whose computation and communication structures can morph to adapt to environmental and demand changes to save energy and computing resources. In this approach, programmers write one single program using a language at a higher level of abstraction. The compiler will exploit the properties of the abstractions to generate an adaptive program that is able to adjust computation and communication structures to environmental and demand changes. We develop a technique, called StreaMorph, that exploits the properties of stream programs' Synchronous Dataflow (SDF) programming model to enable runtime stream graph transformation. The StreaMorph technique can be used to optimize memory usage and to adjust core utilization leading to energy reduction by turning off idle cores or reducing operating frequencies. The main challenge for such a runtime transformation is to maintain consistent program states by copying states between different stream graph structures, because a stream program optimized for different numbers of cores often has different sets of filters and inter-filter channels. We propose an analysis that helps simplify program state copying processes by minimizing copying of states based on the properties of the SDF model. Finally, we implement the StreaMorph method in the StreamIt compiler. Our experiments on the Intel Xeon E5450 show that using StreaMorph to minimize the number of cores used from eight cores to one core, e.g. when streaming rates become lower, can reduce energy consumption by 76.33% on average. Using StreaMorph to spread workload from four cores to six or seven cores, e.g. when more cores become available, to reduce operating frequencies, can lead to 10% energy reduction. In addition, StreaMorph can lead to a buffer size reduction of 82.58% in comparison with a straightforward inter-core filter migration technique when switching from using eight cores to one core.","","","","10.1109/EMSOFT.2013.6658598","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658598","","Computational modeling;Digital signal processing;Ports (Computers);Program processors;Runtime;Steady-state;Switches","data flow analysis;graph theory;program compilers","Intel Xeon E5450;SDF programming model;StreaMorph technique;StreamIt compiler;buffer size reduction;communication structures;computation structures;computing resource saving;consistent program state maintenance;demand changes;energy reduction;energy saving;energy-efficient adaptive program synthesis;environmental changes;high-level abstractions;interfilter channels;memory usage optimization;off-idle core turning;operating frequency reduction;program state copying processes;runtime stream graph transformation;runtime transformation;stream program optimization;stream program properties;synchronous dataflow programming model","","1","","36","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"BPDF: A statically analyzable dataflow model with integer and boolean parameters","Bebelis, V.; Fradet, P.; Girault, A.; Lavigueur, B.","INRIA Rhone-Alpes, France","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Dataflow programming models are well-suited to program many-core streaming applications. However, many streaming applications have a dynamic behavior. To capture this behavior, parametric dataflow models have been introduced over the years. Still, such models do not allow the topology of the dataflow graph to change at runtime, a feature that is also required to program modern streaming applications. To overcome these restrictions, we propose a new model of computation, the Boolean Parametric Data Flow (BPDF) model which combines integer parameters (to express dynamic rates) and boolean parameters (to express the activation and deactivation of communication channels). High dynamism is provided by integer parameters which can change at each basic iteration and boolean parameters which can even change within the iteration. The major challenge with such dynamic models is to guarantee liveness and boundedness. We present static analyses which ensure statically the liveness and the boundedness of BDPF graphs. We also introduce a scheduling methodology to implement our model on highly parallel platforms and demonstrate our approach using a video decoder case study.","","","","10.1109/EMSOFT.2013.6658581","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658581","Boundedness;Dataflow model;Dynamism;Liveness;Parameters;Scheduling","Computational modeling;Data models;Equations;Mathematical model;Ports (Computers);Schedules;Vectors","Boolean functions;data flow computing;data flow graphs","BDPF graph boundedness;BDPF graph liveness;Boolean parametric data flow;dataflow programming models;integer parameters;statically analyzable dataflow model;video decoder","","0","","17","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Middleware design for Physically-Asynchronous Logically-Synchronous (PALS) systems","Al-Nayeem, A.; Cheolgi Kim; Woochul Kang; Po-Liang Wu; Lui Sha","Univ. of Illinois at Urbana-Champaign, Urbana, IL, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","The Physically-Asynchronous Logically-Synchronous (PALS) system is a recently proposed architectural pattern for cyber-physical systems. It guarantees a logically synchronous design abstraction for real-time distributed computations. In this work, we develop a new middleware, called PALSware, to support an efficient and robust implementation of the PALS system and its extensions. PALSware guarantees consistency in distributed applications by eliminating any asynchronous interactions resulting from distributed clocks and node failures. We present a layered design for this middle-ware that is both reusable in different system architectures and can be extended with architecture-specific solutions for fault management. We demonstrate the middleware for an academic control testbed and show the consistency in a fault injection framework designed for this middleware.","","","","10.1109/EMSOFT.2013.6658583","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658583","","Abstracts;Clocks;Computer architecture;Middleware;Servomotors","middleware;software architecture","PALS systems;PALSware;academic control testbed;architecture-specific solutions;distributed clocks;fault injection framework;fault management;middleware design;node failures;physically-asynchronous logically-synchronous systems;system architectures","","0","","34","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"A characterization of integrated multi-view modeling in the context of embedded and cyber-physical systems","Persson, M.; Torngren, M.; Qamar, A.; Westman, J.; Biehl, M.; Tripakis, S.; Vangheluwe, H.; Denil, J.","KTH, Stockholm, Sweden","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Embedded systems, with their tight technology integration, and multiple requirements and stakeholders, are characterized by tightly interrelated processes, information and tools. Embedded systems will as a consequence be described by multiple, heterogeneous and interrelated descriptions such as for example requirements documents, design and analysis models, software and hardware descriptions. We refer to a system designed this way as a multi-view (MV) system. The main contribution of this paper is a characterization of model-based approaches to MV systems. The characterization takes three main perspectives for the relations between viewpoints: semantic relations (content), relations over time (process), and manipulation of views (operations). We complement these perspectives by investigating MV system challenges and by a survey of related approaches. The characterization aims to provide a basis for a better understanding, design and implementation of MV systems, and thereby to overcome the current fragmented points of view on integrated multi-view modeling (MVM).","","","","10.1109/EMSOFT.2013.6658588","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658588","consistency;embedded systems;multi-view modeling (MVM);survey;view relations;viewpoint relationship patterns;viewpoints;views","Analytical models;Educational institutions;Embedded systems;Hardware;Semantics;Syntactics","embedded systems;modelling;programming language semantics;systems analysis","MV systems;MVM;cyber-physical systems;embedded systems;integrated multiview modeling;model-based approaches;relations-over-time;semantic relations;view manipulation","","1","","61","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Diversely enumerating system-level architectures","Jackson, E.K.; Simko, G.; Sztipanovits, J.","Microsoft Res., Redmond, WA, USA","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Embedded systems are highly constrained, and modern constraint solvers can be used to synthesize architectures satisfying constraints. However, solvers may enumerate solutions with bias yielding a skewed view of the solution space. In this paper we formalize enumerators, enumeration bias, and build empirically diverse enumerators. An ideal diverse enumerator uniformly draws equivalence classes of solutions. We develop an algorithm, called symmetry-directed randomized partitioning, for constructing empirically diverse enumerators from modern unmodified constraint solvers. We show that our diverse enumerator is significantly closer to the ideal compared to baseline and randomized solvers.","","","","10.1109/EMSOFT.2013.6658589","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658589","Architectures;constraints;diverse enumeration;symmetry directed randomized partitioning;synthesis","Computer architecture;Cost accounting;Partitioning algorithms;Program processors;Software algorithms;Stochastic processes;Topology","embedded systems;software architecture","constraint solvers;diverse enumerators;embedded systems;enumerating system level architectures;enumeration bias;formalize enumerators;unmodified constraint solvers","","0","","25","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Path-sensitive resource analysis compliant with assertions","Duc-Hiep Chu; Jaffar, J.","Nat. Univ. of Singapore, Singapore, Singapore","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","We consider the problem of bounding the worst-case resource usage of programs, where assertions about valid program executions may be enforced at selected program points. It is folklore that to be precise, path-sensitivity (up to loops) is needed. This entails unrolling loops in the manner of symbolic simulation. To be tractable, however, the treatment of the individual loop iterations must be greedy in the sense once analysis is finished on one iteration, we cannot backtrack to change it. We show that under these conditions, enforcing assertions produces unsound results. The fundamental reason is that complying with assertions requires the analysis to be fully sensitive (also with loops) wrt. the assertion variables. We then present an algorithm where the treatment of each loop is separated in two phases. The first phase uses a greedy strategy in unrolling the loop. This phase explores what is conceptually a symbolic execution tree, which is of enormous size, while eliminates infeasible paths and dominated paths that guaranteed not to contribute to the worst case bound. A compact representation is produced at the end of this phase. Finally, the second phase attacks the remaining problem, to determine the worst-case path in the simplified tree, excluding all paths that violate the assertions from bound calculation. Scalability, in both phases, is achieved via an adaptation of a dynamic programming algorithm.","","","","10.1109/EMSOFT.2013.6658593","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658593","","Abstracts;Algorithm design and analysis;Arrays;Concrete;Context;Scalability;Timing","dynamic programming;iterative methods;program control structures;program diagnostics;trees (mathematics)","dominated path elimination;dynamic programming algorithm;infeasible path elimination;loop iterations;path-sensitive resource analysis;program executions;program point selection;program worst-case resource usage;symbolic execution tree;symbolic simulation","","0","","23","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"A synchronous embedding of Antescofo, a domain-specific language for interactive mixed music","Baudart, G.; Jacquemard, F.; Mandel, L.; Pouzet, M.","Antenne de Bretagne, DI Ecole Normale Super., ENS de Cachan, Cachan, France","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","12","Antescofo is recently developed software for musical score following and mixed music: it automatically, and in real-time, synchronizes electronic instruments with a musician playing on a classical instrument. Therefore, it faces some of the same major challenges as embedded systems. The system provides a programming language used by composers to specify musical pieces that mix interacting electronic and classical instruments. This language is developed with and for musicians and it continues to evolve according to their needs. Yet its semantics has only recently been formally defined. This paper presents a synchronous semantics for the core language of Antescofo and an alternative implementation based on an embedding inside an existing synchronous language, namely ReactiveML. The semantics reduces to a few rules, is mathematically precise and leads to an interpretor of only a few hundred lines. The efficiency of this interpretor compares well with that of the actual implementation: on all musical pieces we have tested, response times have been less than the reaction time of the human ear. Moreover, this embedding permitted the prototyping of several new programming constructs, some of which are described in this paper.","","","","10.1109/EMSOFT.2013.6658579","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658579","Error Handling and Synchronization Strategies;Language Embedding;Mixed Music;Synchronous Programming","Computer languages;Delays;Instruments;Music;Programming;Semantics;Synchronization","electronic music;embedded systems;formal specification;interactive systems;music;musical instruments;specification languages","Antescofo software;ReactiveML;classical instruments;composers;core language;domain-specific language;electronic instrument synchronization;electronic instruments;embedded system;interactive mixed music;interpretor;musical piece specification;musical pieces;musical score following;musician;programming construct;programming language;synchronous embedding;synchronous semantics","","0","","15","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Verifying Simulink diagrams via a Hybrid Hoare Logic Prover","Liang Zou; Zhany, N.; Shuling Wang; Franzle, M.; Shengchao Qin","State Key Lab. of Comp. Sci., Inst. of Software, Beijing, China","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","Simulink is an industrial de-facto standard for building executable models of embedded systems and their environments, facilitating validation by simulation. Due to the inherent incompleteness of this form of system validation, complementing simulation by formal verification would be desirable. A prerequisite for such an approach is a formal semantics of Simulink's graphical models. In this paper, we show how to encode Simulink diagrams into Hybrid CSP (HCSP), a formal modelling language encoding hybrid system dynamics by means of an extension of CSP. The translation from Simulink to HCSP is fully automatic. We furthermore discuss how to utilize a Hybrid Hoare Logic Prover to verify the translated HCSP models. We demonstrate our approach on a combined scenario originating from the Chinese High-speed Train Control System at Level 3 (CTCS-3).","","","","10.1109/EMSOFT.2013.6658587","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658587","Hybrid CSP;Simulink models;formal methods;theorem proving","Analytical models;Equations;Mathematical model;Numerical models;Semantics;Software packages;Wires","communicating sequential processes;digital simulation;embedded systems;formal verification;programming language semantics;simulation languages","CTCS-3;Chinese High-speed Train Control System at Level 3;HCSP models;Simulink diagram verification;Simulink graphical models;communicating sequential processes;embedded systems executable models;formal modelling language;formal semantics;formal verification;hybrid CSP;hybrid Hoare logic prover;hybrid system dynamics;industrial de-facto standard;system validation","","1","","20","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"On composing and proving the correctness of reactive behavior","Harel, D.; Kantor, A.; Katz, G.; Marron, A.; Mizrahi, L.; Weiss, G.","Weizmann Inst. of Sci., Rehovot, Israel","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","10","We present a method and a tool for composing a reactive system and for accompanying the development and documentation process with a proof of its correctness. The approach is based on behavioral programming (BP) and the Z3 SMT solver. We show how program verification can be automated and streamlined by combining properties of individual modules, specified and verified separately, with application-independent specifications both of the BP semantics and of general theories. The method may yield an exponential acceleration of the verification process when compared with model-checking the composite application. We show that formalization of properties of independent modules in preparation for the correctness proofs can be useful as documentation for future development. We view this work as a further step towards making formal correctness proofs standard practice in the development of reactive systems, and carried out by programmers at large.","","","","10.1109/EMSOFT.2013.6658591","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658591","","Acceleration;Documentation;Educational institutions;Programming;Semantics;Synchronization;Three-dimensional displays","formal specification;object-oriented programming;program verification;system documentation","BP semantics;Z3 SMT solver;application-independent specification;behavioral programming;composite application;correctness proving;development process;documentation process;exponential the verification process acceleration;formal correctness proof;model checking;module properties;program verification automation;program verification streamlining;reactive behavior composition","","0","","26","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"Scheduling of mixed-criticality applications on resource-sharing multicore systems","Giannopoulou, G.; Stoimenov, N.; Huang, P.; Thiele, L.","Comput. Eng. & Networks Lab., ETH Zurich, Zurich, Switzerland","Embedded Software (EMSOFT), 2013 Proceedings of the International Conference on","20131111","2013","","","1","15","A common trend in real-time safety-critical embedded systems is to integrate multiple applications on a single platform. Such systems are known as mixed-criticality (MC) systems as the applications are usually characterized by different criticality levels (CLs). Nowadays, multicore platforms are promoted due to cost and performance benefits. However, certification of multicore MC systems is challenging because concurrently executed applications with different CLs may block each other when accessing shared platform resources. Most of the existing research on multicore MC scheduling ignores the effects of resource sharing on the execution times of applications. This paper proposes a MC scheduling strategy which explicitly accounts for these effects. Applications are executed by a flexible time-triggered criticality-monotonic scheduling scheme. Schedulers on different cores are dynamically synchronized such that only a statically known subset of applications of the same CL can interfere on shared resources, e. g.,memories, buses. Therefore, the timing effects of resource sharing are bounded and we quantify them at design time. We combine this scheduling strategy with a mapping optimization technique for achieving better resource utilization. The efficiency of the approach is demonstrated through extensive simulations as well as comparisons with traditional temporal partitioning and state-of-the-art scheduling algorithms. It is also validated on a real-world avionics system.","","","","10.1109/EMSOFT.2013.6658595","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6658595","","Abstracts","multiprocessing systems;resource allocation;scheduling","CL;MC scheduling strategy;MC systems;cost benefit;criticality levels;flexible time-triggered criticality-monotonic scheduling scheme;mixed-criticality applications scheduling;mixed-criticality systems;multicore platforms;performance benefit;real-world avionics system;realtime safety-critical embedded systems;resource sharing;resource utilization;resource-sharing multicore systems;shared platform resources;temporal partitioning","","4","","32","","","Sept. 29 2013-Oct. 4 2013","","IEEE","IEEE Conference Publications"
"TPC",Ernst, R.","Technical University of Braunschweig"
"TPC",Sokolsky, O.","University of Pennsylvania"
"TPC",Alur, R.","University of Pennsylvania"
"TPC",Chakraborty, S.","Technical University of Munich"
"TPC",Niz, D.","Software Engineering Institute"
"TPC",Simone, R.","INRIA"
"TPC",Edwards, S.","Columbia University"
"TPC",Eles, P.","Linköping University"
"TPC",Fischmeister, S.","University of Waterloo"
"TPC",Fränzle, M.","Univeristy of Oldenburg"
"TPC",Gill, C.","Washington University"
"TPC",Halbwachs, N.","VERIMAG"
"TPC",Hamann, A.","Bosch"
"TPC",Heiser, G.","NICTA"
"TPC",Hugues, J.","ISAE"
"TPC",Kang, S.","Kyungpook National University"
"TPC",Karsai, G.","Vanderbilt University"
"TPC",Kirsch, C.","University of Salzburg"
"TPC",Kuo, T.","National Taiwan University"
"TPC",Lawford, M.","McMaster University"
"TPC",Lee, E.","University of California"
"TPC",Mangharam, R.","University of Pennsylvania"
"TPC",Medina, J.","University of Cantabria"
"TPC",Ramesh, S.","General Motors"
"TPC",Regehr, J.","University of Utah"
"TPC",Falk, H.","University of Ulm"
"TPC",Shin, I.","KAIST"
"TPC",Tabuada, P.","University of California"
"TPC",Taha, W.","Rice University"
"TPC",Takada, H.","Nagoya University"
"TPC",Talpin, J.","INRIA"
"TPC",Thiele, L.","ETH Zurich"
"TPC",Tripakis, S.","University of California"
"TPC",Whalen , M.","University of Minnesota"
"TPC",Yi, W.","Uppsala University"